#Shared OCP4 高级部署
NOTICE: Your environment will expire and be deleted in 7 day(s) at 2020-06-06 00:00:00 -0400 and will be idled down after 8 hour(s).
**********
clientVM   ssh -i ~/.ssh/id_rsa laidongs-cn.ibm.com@bastion.405f.example.opentlc.com
Openshift Master Console: http://console-openshift-console.apps.shared.na.openshift.opentlc.com
Openshift API for command line 'oc' client: https://api.shared.na.openshift.opentlc.com:6443

2020-0530--Application Deployment with Red Hat OpenShift Container Platform 4-end

2020-0530---Advanced Application Deployment-Referential Content-All-gogs-neuxs-sornar-jenkins-4-start
#Shared OCP4 高级部署（与上一实验共享环境）GUID c809
NOTICE: Your environment will expire and be deleted in 7 day(s) at 2020-06-06 00:00:00 -0400 and will be idled down after 8 hour(s).
**********

clientVM   ssh -i ~/.ssh/id_rsa laidongs-cn.ibm.com@bastion.405f.example.opentlc.com
Openshift Master Console: http://console-openshift-console.apps.shared.na.openshift.opentlc.com
Openshift API for command line 'oc' client: https://api.shared.na.openshift.opentlc.com:6443

oc login -u laidongs-cn.ibm.com -pLong%mei0  https://api.shared.na.openshift.opentlc.com:6443 #ocp4.X

while true; do curl -s $(oc get route bluegreen --template='{{ .spec.host }}')/item.php | grep "data/images" | awk '{print $5}'; sleep 1; done
while true; do curl -s http://bluegreen-green-blue-deployment1.apps.shared.na.openshift.opentlc.com/item.php | grep "data/images" | awk '{print $5}'; sleep 1; done
oc patch route/bluegreen -p '{"spec":{"to":{"name":"green"}}}'

oc set probe dc/green --readiness --get-url=http://:8080/item.php --initial-delay-seconds=2
oc set probe dc/blue --readiness --get-url=http://:8080/item.php --initial-delay-seconds=2

oc set probe dc/green --liveness --get-url=http://:8080/item.php --initial-delay-seconds=2
oc set probe dc/blue --liveness --get-url=http://:8080/item.php --initial-delay-seconds=2


export REGISTRY=default-route-openshift-image-registry.apps.$(oc whoami --show-server | cut -d. -f2- | cut -d: -f1)
echo ${REGISTRY}
# Log into the registry using Podman, use your username and the token as the password
podman login -u $(oc whoami) -p $(oc whoami -t) ${REGISTRY}

oc rollout pause dc nexus
oc rollout resume dc nexus
export NEXUS_PASSWORD=$(oc rsh nexus-2-tbmtj cat /nexus-data/admin.password)
echo $NEXUS_PASSWORD

oc set deployment-hook dc/nexus --mid --volumes=nexus-volume-1 \
-- /bin/sh -c "echo nexus.scripts.allowCreation=true >./nexus-data/etc/nexus.properties"
oc rollout latest dc/nexus
watch oc get pod

oc new-app --template=postgresql-persistent --param POSTGRESQL_USER=sonar --param POSTGRESQL_PASSWORD=sonar --param POSTGRESQL_DATABASE=sonar --param VOLUME_CAPACITY=4Gi --labels=app=sonarqube_db
oc new-app --docker-image=quay.io/gpte-devops-automation/sonarqube:7.9.1 --env=SONARQUBE_JDBC_USERNAME=sonar --env=SONARQUBE_JDBC_PASSWORD=sonar --env=SONARQUBE_JDBC_URL=jdbc:postgresql://postgresql/sonar --labels=app=sonarqube

oc set volume dc/sonarqube --add --overwrite --name=sonarqube-volume-1 --mount-path=/opt/sonarqube/data/ --type persistentVolumeClaim --claim-name=sonarqube-pvc --claim-size=5Gi
oc set resources dc/sonarqube --limits=memory=3Gi,cpu=2 --requests=memory=2Gi,cpu=1

cd $HOME
git clone https://github.com/redhat-gpte-devopsautomation/openshift-tasks.git
cd $HOME/openshift-tasks
git remote add gogs https://dongdong:qwert12345@homework-gitea.apps.shared.na.openshift.opentlc.com/CICDLabs/openshift-tasks.git
git push -u gogs master

https://homework-gitea.apps.shared.na.openshift.opentlc.com/ dongdong/qwert12345

nexus-405f-nexus.apps.shared.na.openshift.opentlc.com

oc new-app jenkins-persistent --param ENABLE_OAUTH=true --param MEMORY_LIMIT=2Gi --param VOLUME_CAPACITY=4Gi --param DISABLE_ADMINISTRATIVE_MONITORS=true
oc set resources dc jenkins --limits=memory=2Gi,cpu=2 --requests=memory=1Gi,cpu=500m

oc new-build --strategy=docker -D $'FROM quay.io/openshift/origin-jenkins-agent-maven:4.1.0\n
   USER root\n
   RUN curl https://copr.fedorainfracloud.org/coprs/alsadi/dumb-init/repo/epel-7/alsadi-dumb-init-epel-7.repo -o /etc/yum.repos.d/alsadi-dumb-init-epel-7.repo && \ \n
   curl https://raw.githubusercontent.com/cloudrouter/centos-repo/master/CentOS-Base.repo -o /etc/yum.repos.d/CentOS-Base.repo && \ \n
   curl http://mirror.centos.org/centos-7/7/os/x86_64/RPM-GPG-KEY-CentOS-7 -o /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7 && \ \n
   DISABLES="--disablerepo=rhel-server-extras --disablerepo=rhel-server --disablerepo=rhel-fast-datapath --disablerepo=rhel-server-optional --disablerepo=rhel-server-ose --disablerepo=rhel-server-rhscl" && \ \n
   yum $DISABLES -y --setopt=tsflags=nodocs install skopeo && yum clean all\n
   USER 1001' --name=jenkins-agent-appdev -n
   ${GUID}-jenkins
   
http://nexus-405f-nexus.apps.shared.na.openshift.opentlc.com/repository/maven-all-public/  admin/qwert12345

nexus.405f-nexus

image-registry.openshift-image-registry.svc:5000/openshift/jenkins-agent-maven:latest
# 安装maven
wget http://apache.mirrors.lucidnetworks.net/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz -P $HOME; sudo tar xzvf $HOME/apache-maven-3.6.3-bin.tar.gz -C /opt; export PATH=/opt/apache-maven-3.6.3/bin:$PATH
sudo yum install java-1.8.0-openjdk-devel -y
sudo yum install skopeo -y
mvn clean install -DskipTests=true -s ./nexus_settings.xml
mvn test -s ./nexus_settings.xml
mvn -s ./nexus_settings.xml deploy -DskipTests=true \
-DaltDeploymentRepository=nexus::default::http://$(oc get route nexus -n ${GUID}-nexus --template='{{ .spec.host }}')/repository/releases

export REGISTRY=default-route-openshift-image-registry.apps.$(oc whoami --show-server | cut -d. -f2- | cut -d: -f1)

skopeo copy --src-tls-verify=false --dest-tls-verify=false --src-creds=openshift:$(oc whoami -t) --dest-creds=admin:qwert12345 docker://${REGISTRY}/${GUID}2-jenkins/jenkins-agent-appdev docker://$(oc get route nexus-registry -n ${GUID}-nexus --template='{{ .spec.host }}')/${GUID}2-jenkins/jenkins-agent-maven-appdev

mvn sonar:sonar -s ./nexus_settings.xml -Dsonar.host.url=http://$(oc get route sonarqube -n ${GUID}-sonarqube --template='{{ .spec.host }}')
http://gogs-gogs.${GUID}-gogs.svc.cluster.local:3000

oc new-project ${GUID}-builds --display-name="${GUID} Builds"

oc create secret generic gogs-secret --from-literal=username=dongdong --from-literal=password=qwert12345
oc set build-secret --source bc/tasks gogs-secret

oc new-app --template=eap72-basic-s2i --param APPLICATION_NAME=tasks \
--param SOURCE_REPOSITORY_URL=https://homework-gitea.apps.shared.na.openshift.opentlc.com/dongdong/openshift-tasks.git \
--param SOURCE_REPOSITORY_REF=master --param CONTEXT_DIR=/ --param MAVEN_MIRROR_URL=http://nexus.${GUID}-nexus.svc.cluster.local:8081/repository/maven-all-public

oc patch bc/tasks --patch='{"spec": {"strategy": {"sourceStrategy": {"incremental": true}}}}'
oc patch bc/tasks --patch='{"spec": {"strategy": {"sourceStrategy": {"forcePull": false}}}}'

oc new-app --image-stream=redhat-openjdk18-openshift:1.2 https://github.com/redhat-gpte-devopsautomation/ola.git
oc expose svc ola

oc new-build --binary=true --name=ola-binary --image-stream=redhat-openjdk18-openshift:1.2
oc start-build ola-binary --from-file=$HOME/ola/target/ola.jar --follow
oc new-app ola-binary
oc expose svc/ola-binary --port=8080
oc import-image jorgemoralespou/s2i-go --confirm

oc new-build s2i-go~https://github.com/tonykay/ose-chained-builds \
   --context-dir=/go-scratch/hello_world --name=builder
   
oc new-build --name=runtime \
   --source-image=builder \
   --source-image-path=/opt/app-root/src/go/src/main/main:. \
   --dockerfile=$'FROM scratch\nCOPY main /main\nEXPOSE 8080\nUSER 1000\nENTRYPOINT ["/main"]'
   
   
   
   # Set up Dev Project
oc new-project ${GUID}-tasks-dev --display-name "${GUID} Tasks Development"
oc policy add-role-to-user edit system:serviceaccount:${GUID}-jenkins:jenkins -n ${GUID}-tasks-dev

# Set up Dev Application
oc new-build --binary=true --name="tasks" jboss-eap72-openshift:1.0 -n ${GUID}-tasks-dev
oc new-app ${GUID}-tasks-dev/tasks:0.0-0 --name=tasks --allow-missing-imagestream-tags=true -n ${GUID}-tasks-dev
oc set triggers dc/tasks --remove-all -n ${GUID}-tasks-dev
oc expose dc tasks --port 8080 -n ${GUID}-tasks-dev
oc expose svc tasks -n ${GUID}-tasks-dev
oc set probe dc/tasks -n ${GUID}-tasks-dev --readiness --failure-threshold 3 --initial-delay-seconds 60 --get-url=http://:8080/
oc create configmap tasks-config --from-literal="application-users.properties=Placeholder" --from-literal="application-roles.properties=Placeholder" -n ${GUID}-tasks-dev
oc set volume dc/tasks --add --name=jboss-config --mount-path=/opt/eap/standalone/configuration/application-users.properties --sub-path=application-users.properties --configmap-name=tasks-config -n ${GUID}-tasks-dev
oc set volume dc/tasks --add --name=jboss-config1 --mount-path=/opt/eap/standalone/configuration/application-roles.properties --sub-path=application-roles.properties --configmap-name=tasks-config -n ${GUID}-tasks-dev

# Set up Production Project
oc new-project ${GUID}-tasks-prod --display-name "${GUID} Tasks Production"
oc policy add-role-to-group system:image-puller system:serviceaccounts:${GUID}-tasks-prod -n ${GUID}-tasks-dev
oc policy add-role-to-user edit system:serviceaccount:${GUID}-jenkins:jenkins -n ${GUID}-tasks-prod

# Create Blue Application
oc new-app ${GUID}-tasks-dev/tasks:0.0 --name=tasks-blue --allow-missing-imagestream-tags=true -n ${GUID}-tasks-prod
oc set triggers dc/tasks-blue --remove-all -n ${GUID}-tasks-prod
oc expose dc tasks-blue --port 8080 -n ${GUID}-tasks-prod
oc set probe dc tasks-blue -n ${GUID}-tasks-prod --readiness --failure-threshold 3 --initial-delay-seconds 60 --get-url=http://:8080/
oc create configmap tasks-blue-config --from-literal="application-users.properties=Placeholder" --from-literal="application-roles.properties=Placeholder" -n ${GUID}-tasks-prod
oc set volume dc/tasks-blue --add --name=jboss-config --mount-path=/opt/eap/standalone/configuration/application-users.properties --sub-path=application-users.properties --configmap-name=tasks-blue-config -n ${GUID}-tasks-prod
oc set volume dc/tasks-blue --add --name=jboss-config1 --mount-path=/opt/eap/standalone/configuration/application-roles.properties --sub-path=application-roles.properties --configmap-name=tasks-blue-config -n ${GUID}-tasks-prod

# Create Green Application
oc new-app ${GUID}-tasks-dev/tasks:0.0 --name=tasks-green --allow-missing-imagestream-tags=true -n ${GUID}-tasks-prod
oc set triggers dc/tasks-green --remove-all -n ${GUID}-tasks-prod
oc expose dc tasks-green --port 8080 -n ${GUID}-tasks-prod
oc set probe dc tasks-green -n ${GUID}-tasks-prod --readiness --failure-threshold 3 --initial-delay-seconds 60 --get-url=http://:8080/
oc create configmap tasks-green-config --from-literal="application-users.properties=Placeholder" --from-literal="application-roles.properties=Placeholder" -n ${GUID}-tasks-prod
oc set volume dc/tasks-green --add --name=jboss-config --mount-path=/opt/eap/standalone/configuration/application-users.properties --sub-path=application-users.properties --configmap-name=tasks-green-config -n ${GUID}-tasks-prod
oc set volume dc/tasks-green --add --name=jboss-config1 --mount-path=/opt/eap/standalone/configuration/application-roles.properties --sub-path=application-roles.properties --configmap-name=tasks-green-config -n ${GUID}-tasks-prod

# Expose Blue service as route to make blue application active
oc expose svc/tasks-blue --name tasks -n ${GUID}-tasks-prod


2020-0530---Advanced Application Deployment-Referential Content-All-gogs-neuxs-sornar-jenkins-4-start
